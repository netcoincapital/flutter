# Updated platform version for Firebase v15+ compatibility
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Universal iOS 13.0+ compatibility
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Complete Firebase modular headers fix - ULTIMATE SOLUTION
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      
      # Disable ALL non-modular include warnings and errors
      config.build_settings['CLANG_WARN_NON_MODULAR_INCLUDE_IN_FRAMEWORK_MODULE'] = 'NO'
      config.build_settings['GCC_WARN_NON_MODULAR_INCLUDE_IN_FRAMEWORK_MODULE'] = 'NO'
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['CLANG_WARN_IMPLICIT_FUNCTION_DECLARATION'] = 'NO'
      
      # Suppress all related warnings via compiler flags
      config.build_settings['WARNING_CFLAGS'] = '$(inherited) -Wno-non-modular-include-in-framework-module -Wno-quoted-include-in-framework-header'
      config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-non-modular-include-in-framework-module -Wno-error=non-modular-include-in-framework-module -Wno-quoted-include-in-framework-header'
      
      # Disable other problematic warnings
      config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
      config.build_settings['CLANG_WARN_STRICT_PROTOTYPES'] = 'NO'
      config.build_settings['CLANG_WARN_UNUSED_FUNCTION'] = 'NO'
      config.build_settings['CLANG_WARN_UNUSED_VARIABLE'] = 'NO'
      
      # Firebase v15+ specific optimizations
      if target.name.include?('firebase') || target.name.include?('Firebase') || target.name.include?('FLT')
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['OTHER_LDFLAGS'] = '$(inherited) -ObjC'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) COCOAPODS=1 FB_SONARKIT_ENABLED=1'
        
        # Force modular includes for Firebase targets
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['MODULEMAP_FILE'] = ''
        config.build_settings['PRODUCT_MODULE_NAME'] = target.name.gsub(/[^a-zA-Z0-9_]/, '_')
      end
    end
    
    # Special handling for firebase_messaging plugin specifically
    if target.name == 'firebase_messaging'
      target.build_configurations.each do |config|
        # ENABLE modules for firebase_messaging - this is critical!
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'  # Enable module for this target
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'  # Enable modules!
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
        
        # Add comprehensive header search paths
        config.build_settings['HEADER_SEARCH_PATHS'] = [
          '$(inherited)',
          '"${PODS_ROOT}/Headers/Public"',
          '"${PODS_ROOT}/Headers/Public/Firebase"',
          '"${PODS_ROOT}/Headers/Private/Firebase"',
          '"${PODS_ROOT}/Firebase"',
          '"${PODS_ROOT}/FirebaseCore/FirebaseCore/Sources"',
          '"${PODS_ROOT}/FirebaseMessaging/FirebaseMessaging/Sources"'
        ].join(' ')
        
        config.build_settings['USER_HEADER_SEARCH_PATHS'] = config.build_settings['HEADER_SEARCH_PATHS']
      end
    end
  end
end
