2025-07-22 05:45:25 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 05:45:25 - app - INFO - Starting IronWallet application
2025-07-22 05:45:25 - app - INFO - Testing database connection...
2025-07-22 05:45:25 - app - INFO - Database connection successful: 1
2025-07-22 05:45:26 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 05:45:27 - app - INFO - RabbitMQ connection successful
2025-07-22 05:45:27 - app - INFO - Database initialized successfully
2025-07-22 05:45:27 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 05:45:27 - app - INFO - Firebase initialized successfully
2025-07-22 05:45:27 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 05:45:27 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 05:45:27 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f98d271a880>
2025-07-22 05:45:27 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 05:45:27 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 05:45:27 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d1b62'}
2025-07-22 05:45:27 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 05:45:27 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 05:45:27 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f98d273fa30>
2025-07-22 05:45:27 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 05:45:27 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 05:45:27 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d1b62'}
2025-07-22 05:45:27 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 05:45:28 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 05:45:28 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 05:45:28 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 05:45:29 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 05:45:29 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 05:45:30 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 05:46:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:46:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:47:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:47:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:48:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:48:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:49:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:49:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:50:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:50:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:51:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:51:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:52:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:52:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:53:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:53:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:54:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:54:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:55:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:55:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:56:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:56:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:57:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:57:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:58:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:58:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:59:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 05:59:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:00:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:00:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:01:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:01:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:02:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:02:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:03:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:03:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:04:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:04:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:05:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:05:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:06:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:06:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:07:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:07:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:08:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:08:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:09:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:09:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:10:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:10:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:11:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:11:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:12:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:12:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:13:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:13:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:14:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:14:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:15:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:15:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:16:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:16:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:17:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:17:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:18:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:18:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:19:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:19:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:20:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:20:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:21:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:21:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:22:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:22:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:23:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:23:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:24:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:24:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:25:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:25:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:26:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:26:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:27:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:27:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:28:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:28:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:29:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:29:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:30:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:30:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:31:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:31:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:32:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:32:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:33:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:33:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:34:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:34:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:35:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:35:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:36:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:36:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:37:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:37:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:38:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:38:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:39:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:39:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:40:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:40:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:41:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:41:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:42:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:42:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:43:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:43:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:44:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:44:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:45:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:45:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:46:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:46:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:47:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:47:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:48:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:48:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:49:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:49:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:50:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:50:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:51:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:51:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:52:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:52:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:53:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:53:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:54:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:54:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:55:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:55:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:56:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:56:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:57:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:57:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:58:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:58:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:59:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 06:59:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:00:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:00:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:01:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:01:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:02:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:02:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:03:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:03:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:04:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:04:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:05:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:05:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:06:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:06:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:07:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:07:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:08:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:08:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:09:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:09:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:10:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:10:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:11:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:11:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:12:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:12:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:13:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:13:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:14:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:14:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:15:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:15:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:16:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:16:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:17:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:17:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:18:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:18:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:19:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:19:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:20:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:20:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:21:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:21:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:22:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:22:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:23:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:23:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:24:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:24:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:25:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:25:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:26:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:26:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:27:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:27:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:28:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:28:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:29:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:29:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:30:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:30:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:31:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:31:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:32:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:32:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:33:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:33:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:34:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:34:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:35:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:35:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:36:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:36:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:37:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:37:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:38:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:38:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:39:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:39:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:40:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:40:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:41:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:41:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:42:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:42:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:43:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:43:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:44:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:44:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:45:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:45:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:46:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:46:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:47:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:47:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:48:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:48:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:49:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:49:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:50:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:50:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:51:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:51:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:52:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:52:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:53:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:53:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:54:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:54:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:55:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:55:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:56:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:56:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:57:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:57:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:58:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:58:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:59:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 07:59:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:00:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:00:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:01:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:01:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:02:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:02:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:03:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:03:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:04:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:04:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:05:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:05:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:06:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:06:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:07:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:07:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:08:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:08:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:09:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:09:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:10:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:10:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:11:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:11:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:12:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:12:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:13:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:13:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:14:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:14:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:15:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:15:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:16:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:16:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:17:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:17:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:18:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:18:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:19:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:19:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:20:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:20:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:21:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:21:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:22:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:22:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:23:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:23:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:24:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:24:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:25:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:25:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:26:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:26:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:27:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:27:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:28:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:28:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:29:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:29:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:30:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:30:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:31:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:31:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:32:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:32:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:33:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:33:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:34:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:34:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:35:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:35:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:36:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:36:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:37:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:37:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:38:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:38:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:39:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:39:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:40:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:40:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:41:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:41:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:42:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:42:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:43:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:43:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:44:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:44:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:45:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:45:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:46:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:46:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:47:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:47:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:48:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:48:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:49:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:49:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:50:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:50:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:51:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:51:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:52:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:52:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:53:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:53:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:55:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:55:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:56:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:56:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:57:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:57:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:58:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:58:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:59:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 08:59:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:00:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:00:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:01:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:01:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:02:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:02:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:03:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:03:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:04:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:04:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:05:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:05:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:06:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:06:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:07:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:07:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:08:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:08:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:09:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:09:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:10:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:10:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:11:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:11:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:12:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:12:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:13:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:13:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:14:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:14:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:15:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:15:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:16:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:16:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:17:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:17:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:18:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:18:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:19:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:19:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:20:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:20:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:21:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:21:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:22:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:22:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:23:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:23:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:24:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:24:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:25:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:25:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:26:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:26:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:27:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:27:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:28:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:28:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:29:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:29:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:30:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:30:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:31:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:31:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:32:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:32:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:33:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:33:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:34:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:34:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:35:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:35:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:36:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:36:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:37:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:37:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:38:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:38:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:39:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:39:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:40:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:40:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:41:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:41:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:42:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:42:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:43:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:43:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:44:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:44:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:45:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:45:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:46:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:46:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:47:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:47:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:48:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:48:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:49:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:49:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:50:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:50:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:51:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:51:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:52:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:52:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:53:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:53:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:54:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:54:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:55:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:55:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:56:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:56:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:57:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:57:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:58:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:58:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:59:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 09:59:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:00:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:00:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:01:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:01:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:02:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:02:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:03:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:03:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:04:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:04:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:05:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:05:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:06:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:06:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:07:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:07:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:08:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:08:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:09:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:09:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:10:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:10:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:11:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:11:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:12:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:12:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:13:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:13:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:14:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:14:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:15:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:15:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:16:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:16:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:17:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:17:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:18:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:18:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:19:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:19:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:20:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:20:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:21:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:21:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:22:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:22:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:23:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:23:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:24:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:24:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:25:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:25:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:26:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:26:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:27:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:27:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:28:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:28:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:29:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:29:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:30:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:30:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:31:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:31:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:32:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:32:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:33:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:33:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:34:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:34:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:35:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:35:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:36:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:36:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:37:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:37:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:38:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:38:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:39:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:39:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:40:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:40:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:41:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:41:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:42:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:42:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:43:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:43:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:44:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:44:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:45:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:45:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:46:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:46:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:47:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:47:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:48:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:48:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:49:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:49:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:50:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:50:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:51:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:51:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:52:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:52:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:53:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:53:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:54:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:54:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:55:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:55:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:56:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:56:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:57:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:57:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:58:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:58:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:59:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 10:59:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:00:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:00:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:01:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:01:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:02:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:02:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:03:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:03:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:04:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:04:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:05:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:05:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:06:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:06:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:07:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:07:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:08:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:08:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:09:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:09:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:10:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:10:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:11:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:11:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:12:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:12:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:13:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:13:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:14:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:14:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:15:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:15:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:16:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:16:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:17:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:17:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:18:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:18:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:19:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:19:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:20:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:20:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:21:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:21:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:22:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:22:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:23:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:23:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:24:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:24:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:25:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:25:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:26:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:26:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:27:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:27:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:28:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:28:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:29:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:29:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:30:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:30:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:31:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:31:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:32:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:32:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:33:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:33:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:34:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:34:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:36:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:36:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:37:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:37:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:41:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:41:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:42:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:42:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:43:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:43:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:47:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:47:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:48:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:48:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:49:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:49:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:50:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:50:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:51:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:51:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:52:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:52:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:53:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:53:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:54:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:54:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:55:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:55:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:56:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:56:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:57:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:57:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:58:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:58:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:59:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 11:59:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:00:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:00:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:01:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:01:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:02:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:02:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:03:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:03:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:04:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:04:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:05:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:05:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:06:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:06:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:07:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:07:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:08:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:08:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:09:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:09:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:10:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:10:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:11:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:11:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:12:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:12:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:13:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:13:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:14:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:14:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:15:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:15:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:16:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:16:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:17:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:17:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:18:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:18:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:19:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:19:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:20:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:20:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:21:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:21:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:22:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:22:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:23:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:23:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:24:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:24:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:25:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:25:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:26:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:26:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:27:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:27:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:28:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:28:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:29:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:29:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:30:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:30:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:31:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:31:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:32:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:32:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:33:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:33:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:34:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:34:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:35:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:35:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:36:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:36:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:37:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:37:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:38:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:38:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:39:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:39:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:40:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:40:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:41:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:41:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:42:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:42:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:43:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:43:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:44:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:44:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:45:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:45:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:46:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:46:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:47:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:47:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:48:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:48:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:49:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:49:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:50:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:50:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:51:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:51:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:52:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:52:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:53:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:53:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:54:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:54:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:55:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:55:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:56:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:56:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:57:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:57:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:58:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:58:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:59:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 12:59:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:00:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:00:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:01:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:01:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:02:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:02:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:03:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:03:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:04:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:04:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:05:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:05:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:06:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:06:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:07:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:07:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:08:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:08:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:09:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:09:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:10:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:10:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:11:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:11:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:12:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:12:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:13:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:13:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:14:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:14:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:15:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:15:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:16:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:16:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:17:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:17:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:18:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:18:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:19:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:19:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:20:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:20:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:21:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:21:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:22:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:22:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:23:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:23:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:24:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:24:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:25:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:25:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:26:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:26:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:27:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:27:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:28:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:28:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:29:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:29:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:30:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:30:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:31:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:31:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:32:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:32:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:33:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:33:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:34:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:34:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:35:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:35:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:36:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:36:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:37:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:37:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:38:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:38:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:39:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:39:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:40:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:40:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:41:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:41:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:42:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:42:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:43:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:43:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:44:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:44:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:45:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:45:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:46:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:46:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:47:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:47:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:48:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:48:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:49:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:49:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:50:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:50:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:51:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:51:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:52:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:52:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:53:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:53:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:54:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:54:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:55:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:55:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:56:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:56:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:57:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:57:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:58:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:58:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:59:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 13:59:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:00:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:00:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:01:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:01:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:02:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:02:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:03:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:03:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:04:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:04:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:05:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:05:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:06:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:06:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:07:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:07:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:08:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:08:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:09:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:09:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:10:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:10:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:11:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:11:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:12:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:12:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:13:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:13:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:14:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:14:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:15:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:15:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:16:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:16:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:17:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:17:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:18:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:18:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:19:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:19:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:20:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:20:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:21:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:21:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:22:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:22:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:23:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:23:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:24:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:24:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:25:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:25:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:26:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:26:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:27:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:27:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:28:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:28:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:29:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:29:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:30:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:30:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:31:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:31:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:32:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:32:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:33:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:33:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:34:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:34:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:35:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:35:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:36:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:36:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:37:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:37:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:38:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:38:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:39:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:39:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:40:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:40:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:41:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:41:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:42:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:42:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:43:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:43:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:44:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:44:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:45:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:45:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:46:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:46:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:47:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:47:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:48:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:48:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:49:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:49:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:50:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:50:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:51:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:51:59 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:53:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:53:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:54:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:54:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:55:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:55:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:56:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:56:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:57:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:57:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:58:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:58:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:59:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 14:59:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:00:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:00:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:01:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:01:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:02:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:02:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:03:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:03:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:04:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:04:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:05:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:05:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:06:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:06:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:07:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:07:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:08:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:08:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:09:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:09:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:10:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:10:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:11:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:11:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:12:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:12:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:13:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:13:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:14:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:14:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:15:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:15:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:16:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:16:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:17:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:17:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:18:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:18:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:19:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:19:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:20:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:20:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:21:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:21:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:22:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:22:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:23:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:23:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:24:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:24:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:25:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:25:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:26:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:26:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:27:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:27:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:28:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:28:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:29:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:29:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:30:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:30:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:31:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:31:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:32:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:32:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:33:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:33:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:34:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:34:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:35:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:35:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:36:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:36:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:37:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:37:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:38:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:38:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:39:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:39:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:40:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:40:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:41:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:41:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:42:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:42:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:43:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:43:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:44:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:44:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:45:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:45:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:46:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:46:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:47:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:47:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:48:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:48:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:49:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:49:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:50:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:50:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:51:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:51:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:52:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:52:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:53:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:53:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:54:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:54:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:55:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:55:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:56:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:56:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:57:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:57:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:58:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:58:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:59:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 15:59:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:00:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:00:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:01:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:01:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:02:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:02:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:03:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:03:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:04:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:04:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:05:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:05:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:06:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:06:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:07:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:07:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:08:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:08:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:09:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:09:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:10:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:10:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:11:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:11:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:12:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:12:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:13:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:13:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:14:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:14:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:15:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:15:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:16:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:16:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:17:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:17:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:18:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:18:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:19:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:19:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:20:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:20:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:21:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:21:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:22:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:22:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:23:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:23:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:24:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:24:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:25:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:25:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:26:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:26:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:27:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:27:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:28:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:28:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:29:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:29:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:30:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:30:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:31:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:31:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:32:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:32:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:33:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:33:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:34:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:34:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:35:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:35:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:36:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:36:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:37:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:37:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:38:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:38:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:39:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:39:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:40:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:40:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:41:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:41:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:42:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:42:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:43:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:43:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:44:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:44:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:45:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:45:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:46:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:46:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:47:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:47:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:48:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:48:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:49:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:49:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:50:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:50:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:51:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:51:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:52:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:52:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:53:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:53:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:54:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:54:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:55:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:55:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:56:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:56:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:57:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:57:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:58:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:58:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:59:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 16:59:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:00:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:00:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:01:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:01:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:02:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:02:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:03:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:03:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:04:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:04:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:05:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:05:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:06:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:06:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:07:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:07:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:08:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:08:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:09:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:09:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:10:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:10:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:11:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:11:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:12:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:12:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:13:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:13:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:14:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:14:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:15:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:15:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:16:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:16:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:17:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:17:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:18:11 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:18:11 - app - INFO - Starting IronWallet application
2025-07-22 17:18:11 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:18:11 - app - INFO - Starting IronWallet application
2025-07-22 17:18:11 - app - INFO - Testing database connection...
2025-07-22 17:18:11 - app - INFO - Testing database connection...
2025-07-22 17:18:11 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:18:11 - app - INFO - Starting IronWallet application
2025-07-22 17:18:11 - app - INFO - Testing database connection...
2025-07-22 17:18:11 - app - INFO - Database connection successful: 1
2025-07-22 17:18:11 - app - INFO - Database connection successful: 1
2025-07-22 17:18:11 - app - INFO - Database connection successful: 1
2025-07-22 17:18:12 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:18:12 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:18:12 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:18:14 - app - INFO - RabbitMQ connection successful
2025-07-22 17:18:14 - app - INFO - RabbitMQ connection successful
2025-07-22 17:18:14 - app - INFO - Database initialized successfully
2025-07-22 17:18:14 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:18:14 - app - INFO - Database initialized successfully
2025-07-22 17:18:14 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:18:15 - app - INFO - RabbitMQ connection successful
2025-07-22 17:18:15 - app - INFO - Firebase initialized successfully
2025-07-22 17:18:15 - app - INFO - Firebase initialized successfully
2025-07-22 17:18:15 - app - INFO - Database initialized successfully
2025-07-22 17:18:15 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:18:15 - app - INFO - Firebase initialized successfully
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c97850>
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c977c0>
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c988e0>
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c40970>
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c40a00>
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:18:15 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fb191c40a90>
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:18:15 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:18:15 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d675d'}
2025-07-22 17:18:15 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:16 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:16 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:16 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:18:17 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:18:17 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:18 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:18:19 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:22:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:28:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:33:52 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:33:52 - app - INFO - Starting IronWallet application
2025-07-22 17:33:52 - app - INFO - Testing database connection...
2025-07-22 17:33:52 - app - INFO - Database connection successful: 1
2025-07-22 17:33:53 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:33:53 - app - INFO - Starting IronWallet application
2025-07-22 17:33:53 - app - INFO - Testing database connection...
2025-07-22 17:33:53 - app - INFO - Database connection successful: 1
2025-07-22 17:33:53 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 17:33:53 - app - INFO - Starting IronWallet application
2025-07-22 17:33:53 - app - INFO - Testing database connection...
2025-07-22 17:33:53 - app - INFO - Database connection successful: 1
2025-07-22 17:33:53 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:33:54 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:33:54 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 17:33:56 - app - INFO - RabbitMQ connection successful
2025-07-22 17:33:56 - app - INFO - Database initialized successfully
2025-07-22 17:33:56 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:33:57 - app - INFO - RabbitMQ connection successful
2025-07-22 17:33:57 - app - INFO - RabbitMQ connection successful
2025-07-22 17:33:57 - app - INFO - Firebase initialized successfully
2025-07-22 17:33:57 - app - INFO - Database initialized successfully
2025-07-22 17:33:57 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:33:57 - app - INFO - Database initialized successfully
2025-07-22 17:33:57 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 17:33:57 - app - INFO - Firebase initialized successfully
2025-07-22 17:33:57 - app - INFO - Firebase initialized successfully
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45dd9820>
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45dd78b0>
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45dd7790>
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45d839d0>
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:57 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 17:33:57 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45d80a60>
2025-07-22 17:33:57 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f9a45d8d940>
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:57 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 17:33:58 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:58 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:58 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:58 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 17:33:58 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d6918'}
2025-07-22 17:33:58 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:58 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:58 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:58 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 17:33:59 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 17:33:59 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:34:00 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:34:01 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:35:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:36:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:00 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:37:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:38:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:39:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:40:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:41:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:01 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:42:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:43:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:44:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:45:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:46:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:02 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:47:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:48:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:49:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:50:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:51:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:52:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:03 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:53:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:54:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:55:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:56:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:57:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:04 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:58:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 17:59:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:00:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:01:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:02:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:03:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:04:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:05:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:06:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:07:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:08:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:09:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:10:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:11:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:12:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:13:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:14:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:07 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:15:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:16:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:17:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:18:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:19:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:08 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:20:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:21:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:22:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:23:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:24:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:25:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:09 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:26:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:27:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:28:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:29:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:30:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:31:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:10 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:32:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:33:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:34:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:35:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:36:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:37:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:11 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:38:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:39:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:40:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:41:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:42:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:12 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:43:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:44:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:45:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:46:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:47:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:48:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:13 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:49:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:50:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:51:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:52:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:53:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:54:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:14 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:55:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:56:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:57:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:58:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 18:59:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:00:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:15 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:01:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:02:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:03:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:04:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:05:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:06:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:16 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:07:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:08:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:09:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:10:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:11:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:12:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:17 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:13:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:14:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:15:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:16:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:17:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:18 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:18:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:19:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:20:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:21:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:22:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:23:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:19 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:24:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:25:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:26:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:27:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:28:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:20 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:30:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:31:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:32:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:33:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:34:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:35:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:36:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:37:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:38:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:39:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:40:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:41:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:42:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:43:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:44:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:45:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:46:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:47:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:48:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:23 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:49:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:50:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:51:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:52:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:53:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:54:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:24 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:55:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:56:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:57:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:58:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 19:59:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:25 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:00:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:01:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:02:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:03:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:04:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:05:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:06:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:26 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:07:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:08:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:09:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:10:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:11:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:12:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:13:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:14:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:15:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:16:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:17:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:18:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:19:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:20:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:21:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:22:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:23:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:24:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:25:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:26:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:27:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:28:14 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:28:14 - app - INFO - Starting IronWallet application
2025-07-22 20:28:14 - app - INFO - Testing database connection...
2025-07-22 20:28:14 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:28:14 - app - INFO - Starting IronWallet application
2025-07-22 20:28:14 - app - INFO - Testing database connection...
2025-07-22 20:28:14 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:28:14 - app - INFO - Starting IronWallet application
2025-07-22 20:28:14 - app - INFO - Testing database connection...
2025-07-22 20:28:15 - app - INFO - Database connection successful: 1
2025-07-22 20:28:15 - app - INFO - Database connection successful: 1
2025-07-22 20:28:15 - app - INFO - Database connection successful: 1
2025-07-22 20:28:15 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:28:15 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:28:15 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:28:17 - app - INFO - RabbitMQ connection successful
2025-07-22 20:28:17 - app - INFO - RabbitMQ connection successful
2025-07-22 20:28:17 - app - INFO - Database initialized successfully
2025-07-22 20:28:17 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:28:17 - app - INFO - RabbitMQ connection successful
2025-07-22 20:28:17 - app - INFO - Database initialized successfully
2025-07-22 20:28:17 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:28:17 - app - INFO - Database initialized successfully
2025-07-22 20:28:17 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:28:18 - app - INFO - Firebase initialized successfully
2025-07-22 20:28:18 - app - INFO - Firebase initialized successfully
2025-07-22 20:28:18 - app - INFO - Firebase initialized successfully
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ad87c0>
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ad7850>
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ad6730>
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a83970>
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:18 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a8c8e0>
2025-07-22 20:28:18 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a81a00>
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:28:18 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:18 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:28:18 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7c51'}
2025-07-22 20:28:19 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:19 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:19 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:19 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:19 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:28:20 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:28:20 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:28:21 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:28:22 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:29:21 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:29:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:29:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:30:22 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:31:19 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:19 - app - INFO - Starting IronWallet application
2025-07-22 20:31:19 - app - INFO - Testing database connection...
2025-07-22 20:31:19 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:19 - app - INFO - Starting IronWallet application
2025-07-22 20:31:19 - app - INFO - Testing database connection...
2025-07-22 20:31:19 - app - INFO - Database connection successful: 1
2025-07-22 20:31:19 - app - INFO - Database connection successful: 1
2025-07-22 20:31:19 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:19 - app - INFO - Starting IronWallet application
2025-07-22 20:31:19 - app - INFO - Testing database connection...
2025-07-22 20:31:20 - app - INFO - Database connection successful: 1
2025-07-22 20:31:20 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:31:20 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:31:20 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:31:21 - app - INFO - RabbitMQ connection successful
2025-07-22 20:31:21 - app - INFO - Database initialized successfully
2025-07-22 20:31:21 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:31:21 - app - INFO - RabbitMQ connection successful
2025-07-22 20:31:21 - app - INFO - Database initialized successfully
2025-07-22 20:31:21 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:31:21 - app - INFO - Firebase initialized successfully
2025-07-22 20:31:21 - app - INFO - Firebase initialized successfully
2025-07-22 20:31:21 - app - INFO - RabbitMQ connection successful
2025-07-22 20:31:21 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:21 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ada610>
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:21 - app - INFO - Database initialized successfully
2025-07-22 20:31:21 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:21 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:21 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a80c40>
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:21 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:21 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ade4f0>
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:21 - app - INFO - Firebase initialized successfully
2025-07-22 20:31:21 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:21 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:21 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a86b20>
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:21 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:21 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:21 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:22 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:22 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:22 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613ae0580>
2025-07-22 20:31:22 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:22 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:22 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:22 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:31:22 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:31:22 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7ff613a87bb0>
2025-07-22 20:31:22 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:31:22 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:31:22 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7ca7'}
2025-07-22 20:31:22 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:22 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:22 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:22 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:22 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:22 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:31:23 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:31:23 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:31:23 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:23 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:23 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:23 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:24 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:31:58 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:58 - app - INFO - Starting IronWallet application
2025-07-22 20:31:58 - app - INFO - Testing database connection...
2025-07-22 20:31:58 - app - INFO - Database connection successful: 1
2025-07-22 20:31:58 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:58 - app - INFO - Starting IronWallet application
2025-07-22 20:31:58 - app - INFO - Testing database connection...
2025-07-22 20:31:58 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:31:58 - app - INFO - Starting IronWallet application
2025-07-22 20:31:58 - app - INFO - Testing database connection...
2025-07-22 20:31:58 - app - INFO - Database connection successful: 1
2025-07-22 20:31:58 - app - INFO - Database connection successful: 1
2025-07-22 20:31:58 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:31:59 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:31:59 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:32:01 - app - INFO - RabbitMQ connection successful
2025-07-22 20:32:01 - app - INFO - Database initialized successfully
2025-07-22 20:32:01 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:32:01 - app - INFO - Firebase initialized successfully
2025-07-22 20:32:01 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d39196a0>
2025-07-22 20:32:02 - app - INFO - RabbitMQ connection successful
2025-07-22 20:32:02 - app - INFO - RabbitMQ connection successful
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:02 - app - INFO - Database initialized successfully
2025-07-22 20:32:02 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:32:02 - app - INFO - Database initialized successfully
2025-07-22 20:32:02 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cba'}
2025-07-22 20:32:02 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d38cd850>
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cba'}
2025-07-22 20:32:02 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:02 - app - INFO - Firebase initialized successfully
2025-07-22 20:32:02 - app - INFO - Firebase initialized successfully
2025-07-22 20:32:02 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d39197c0>
2025-07-22 20:32:02 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d3918730>
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cbb'}
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cbb'}
2025-07-22 20:32:02 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d38c3970>
2025-07-22 20:32:02 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:02 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:32:02 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:32:02 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7f91d38ce8e0>
2025-07-22 20:32:03 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:32:03 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:03 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cbb'}
2025-07-22 20:32:03 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:03 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:32:03 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cbb'}
2025-07-22 20:32:03 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:03 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:03 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:03 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:03 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:03 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:32:04 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:32:04 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:32:04 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:04 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:32:05 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:32:06 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:33:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:05 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:06 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:34:08 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:08 - app - INFO - Starting IronWallet application
2025-07-22 20:34:08 - app - INFO - Testing database connection...
2025-07-22 20:34:08 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:08 - app - INFO - Starting IronWallet application
2025-07-22 20:34:08 - app - INFO - Testing database connection...
2025-07-22 20:34:08 - app - INFO - Database connection successful: 1
2025-07-22 20:34:08 - app - INFO - Database connection successful: 1
2025-07-22 20:34:09 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:09 - app - INFO - Starting IronWallet application
2025-07-22 20:34:09 - app - INFO - Testing database connection...
2025-07-22 20:34:09 - app - INFO - Database connection successful: 1
2025-07-22 20:34:09 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:09 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:09 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:11 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:11 - app - INFO - Database initialized successfully
2025-07-22 20:34:11 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:11 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:11 - app - INFO - Database initialized successfully
2025-07-22 20:34:11 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:11 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:11 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:11 - app - INFO - Database initialized successfully
2025-07-22 20:34:11 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:12 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9d9730>
2025-07-22 20:34:12 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9d97c0>
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9d9850>
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f98d8e0>
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f982970>
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:12 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f982a00>
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:12 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:12 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cf8'}
2025-07-22 20:34:12 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:13 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:13 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:13 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:13 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:13 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:14 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:14 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:14 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:14 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:15 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:16 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:23 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:23 - app - INFO - Starting IronWallet application
2025-07-22 20:34:23 - app - INFO - Testing database connection...
2025-07-22 20:34:23 - app - INFO - Database connection successful: 1
2025-07-22 20:34:23 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:23 - app - INFO - Starting IronWallet application
2025-07-22 20:34:23 - app - INFO - Testing database connection...
2025-07-22 20:34:23 - app - INFO - Database connection successful: 1
2025-07-22 20:34:23 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:34:23 - app - INFO - Starting IronWallet application
2025-07-22 20:34:23 - app - INFO - Testing database connection...
2025-07-22 20:34:23 - app - INFO - Database connection successful: 1
2025-07-22 20:34:23 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:23 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:23 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:34:24 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:24 - app - INFO - Database initialized successfully
2025-07-22 20:34:24 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:24 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:25 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:25 - app - INFO - Database initialized successfully
2025-07-22 20:34:25 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:25 - app - INFO - RabbitMQ connection successful
2025-07-22 20:34:25 - app - INFO - Database initialized successfully
2025-07-22 20:34:25 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:34:25 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:25 - app - INFO - Firebase initialized successfully
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9dd610>
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f981c40>
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9db4f0>
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f9de580>
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f986b20>
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:34:25 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fc97f987bb0>
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:25 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:34:25 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7cfe'}
2025-07-22 20:34:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:26 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:26 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:34:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:34:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:34:28 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:35:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:35:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:35:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:36:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:37:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:38:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:39:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:40:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:41:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:42:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:43:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:44:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:45:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:46:40 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:46:40 - app - INFO - Starting IronWallet application
2025-07-22 20:46:40 - app - INFO - Testing database connection...
2025-07-22 20:46:40 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:46:40 - app - INFO - Starting IronWallet application
2025-07-22 20:46:40 - app - INFO - Testing database connection...
2025-07-22 20:46:40 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 20:46:40 - app - INFO - Starting IronWallet application
2025-07-22 20:46:40 - app - INFO - Testing database connection...
2025-07-22 20:46:40 - app - INFO - Database connection successful: 1
2025-07-22 20:46:40 - app - INFO - Database connection successful: 1
2025-07-22 20:46:40 - app - INFO - Database connection successful: 1
2025-07-22 20:46:40 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:46:40 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:46:41 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 20:46:43 - app - INFO - RabbitMQ connection successful
2025-07-22 20:46:43 - app - INFO - RabbitMQ connection successful
2025-07-22 20:46:43 - app - INFO - Database initialized successfully
2025-07-22 20:46:43 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:46:43 - app - INFO - Database initialized successfully
2025-07-22 20:46:43 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:46:43 - app - INFO - RabbitMQ connection successful
2025-07-22 20:46:43 - app - INFO - Firebase initialized successfully
2025-07-22 20:46:43 - app - INFO - Firebase initialized successfully
2025-07-22 20:46:43 - app - INFO - Database initialized successfully
2025-07-22 20:46:43 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 20:46:43 - app - INFO - Firebase initialized successfully
2025-07-22 20:46:43 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:43 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:43 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd76997c0>
2025-07-22 20:46:43 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:43 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:43 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd7697730>
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:44 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd76996a0>
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e59'}
2025-07-22 20:46:44 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:44 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd7642970>
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e59'}
2025-07-22 20:46:44 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:44 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd764c8e0>
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e59'}
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e59'}
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e5a'}
2025-07-22 20:46:44 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 20:46:44 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd764d850>
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 20:46:44 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 20:46:44 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d7e5a'}
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:44 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 20:46:45 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 20:46:45 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:46 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:46:47 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:47:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:48:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:49:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:50:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:47 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:51:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:52:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:53:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:54:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:55:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:48 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:56:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:57:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:58:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 20:59:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:00:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:01:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:02:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:49 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:03:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:04:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:05:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:06:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:07:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:08:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:50 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:09:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:10:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:11:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:12:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:13:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:14:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:51 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:15:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:16:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:17:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:18:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:19:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:20:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:21:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:52 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:22:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:23:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:24:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:25:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:26:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:27:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:53 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:28:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:29:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:30:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:31:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:32:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:33:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:54 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:34:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:35:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:36:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:37:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:38:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:55 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:39:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:40:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:41:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:42:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:43:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:44:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:56 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:45:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:46:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:47:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:48:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:49:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:50:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:57 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:51:58 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:52:22 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 21:52:22 - app - INFO - Starting IronWallet application
2025-07-22 21:52:22 - app - INFO - Testing database connection...
2025-07-22 21:52:22 - app - INFO - Database connection successful: 1
2025-07-22 21:52:22 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 21:52:22 - app - INFO - Starting IronWallet application
2025-07-22 21:52:22 - app - INFO - Testing database connection...
2025-07-22 21:52:22 - app - INFO - Database connection successful: 1
2025-07-22 21:52:22 - app - DEBUG - Logger initialized for app at level DEBUG
2025-07-22 21:52:22 - app - INFO - Starting IronWallet application
2025-07-22 21:52:22 - app - INFO - Testing database connection...
2025-07-22 21:52:22 - app - INFO - Database connection successful: 1
2025-07-22 21:52:22 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 21:52:23 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 21:52:23 - rlp.codec - DEBUG - Consider installing rusty-rlp to improve pyrlp performance with a rust basedbackend. Not currently functional for Python 3.11
2025-07-22 21:52:24 - app - INFO - RabbitMQ connection successful
2025-07-22 21:52:24 - app - INFO - RabbitMQ connection successful
2025-07-22 21:52:24 - app - INFO - Database initialized successfully
2025-07-22 21:52:24 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 21:52:24 - app - INFO - Database initialized successfully
2025-07-22 21:52:24 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 21:52:24 - app - INFO - RabbitMQ connection successful
2025-07-22 21:52:24 - app - INFO - Firebase initialized successfully
2025-07-22 21:52:24 - app - INFO - Firebase initialized successfully
2025-07-22 21:52:24 - app - INFO - Database initialized successfully
2025-07-22 21:52:24 - app - INFO - Skipping DeviceToken migration - migrations module not available
2025-07-22 21:52:24 - app - INFO - Firebase initialized successfully
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd769c4f0>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd769e580>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd7647b20>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd76a2460>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd7647bb0>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - web3.manager.RequestManager - DEBUG - Making request. Method: eth_blockNumber
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Making request HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber
2025-07-22 21:52:24 - web3._utils.http_session_manager.HTTPSessionManager - DEBUG - Session cached: https://polygon-rpc.com, <requests.sessions.Session object at 0x7fdcd7647a90>
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): polygon-rpc.com:443
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:24 - urllib3.connectionpool - DEBUG - https://polygon-rpc.com:443 "POST / HTTP/1.1" 200 69
2025-07-22 21:52:24 - web3.providers.HTTPProvider - DEBUG - Getting response HTTP. URI: https://polygon-rpc.com, Method: eth_blockNumber, Response: {'id': 0, 'jsonrpc': '2.0', 'result': '0x46d8598'}
2025-07-22 21:52:24 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:25 - substrateinterface.base - DEBUG - Connecting to wss://rpc.polkadot.io ...
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:25 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:25 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ethereum -> EthereumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: eth -> ethereum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bsc -> BSCService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: binance-smart-chain -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: bnb -> bsc
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: bitcoin -> BitcoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: btc -> bitcoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: tron -> TronService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: trx -> tron
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polygon -> PolygonService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: matic -> polygon
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: ripple -> XRPService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: xrp -> ripple
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: solana -> SolanaService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: sol -> solana
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: polkadot -> PolkadotService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: dot -> polkadot
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: litecoin -> LitecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: ltc -> litecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dogecoin -> DogecoinService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: doge -> dogecoin
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: dash -> DashService
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: arbitrum -> ArbitrumService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: arb -> arbitrum
2025-07-22 21:52:26 - utils.blockchain_service_factory - INFO - Registered blockchain service: avalanche -> AvalancheService
2025-07-22 21:52:26 - utils.blockchain_service_factory - DEBUG - Added name variant: avax -> avalanche
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:26 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for solana: SOLANA_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for litecoin: LITECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dogecoin: DOGECOIN_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for dash: DASH_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for arbitrum: ARBITRUM_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:52:27 - utils.blockchain_service_factory - ERROR - Error instantiating registered service for avalanche: AVALANCHE_NODE_URL environment variable is not set
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:53:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:54:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:55:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:56:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:57:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:58:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:27 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 21:59:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:00:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:01:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:02:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:03:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:28 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:04:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:05:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:06:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:07:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:08:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:09:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:10:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:29 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:11:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:12:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:13:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:24 - root - INFO - Successfully generated Binance Smart Chain address: 0xd4f567dc1091640Be1cD295fD0c2399194e769D2
2025-07-22 22:14:24 - root - INFO - Successfully generated Binance Smart Chain address: 0xd4f567dc1091640Be1cD295fD0c2399194e769D2
2025-07-22 22:14:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:14:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:15:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:16:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:30 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:17:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:18:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:19:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:20:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:21:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:31 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:22:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:23:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:24:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:25:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:26:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:27:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:32 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:28:41 - root - INFO - Successfully generated Binance Smart Chain address: 0x80011a60Aa12917aDD808812C970C31900bdeAc2
2025-07-22 22:28:41 - root - INFO - Successfully generated Binance Smart Chain address: 0x80011a60Aa12917aDD808812C970C31900bdeAc2
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:29:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:30:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:31:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:32:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:33:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:33 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:34:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:35:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:36:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:37:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:38:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:39:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:40:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:34 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:41:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:42:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:43:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:44:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:45:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:46:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:25 - root - INFO - Successfully generated Binance Smart Chain address: 0x68Ba7F66B09783977E36AA7bD8390b812742853C
2025-07-22 22:47:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:35 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:47:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:48:44 - root - INFO - Successfully generated Binance Smart Chain address: 0xDB57a3aC6377c86336f73C0DdAc45a309fbbc58E
2025-07-22 22:48:44 - root - INFO - Successfully generated Binance Smart Chain address: 0xDB57a3aC6377c86336f73C0DdAc45a309fbbc58E
2025-07-22 22:49:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:49:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:49:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:49:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:49:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:49:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:50:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:51:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:52:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:36 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:53:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:54:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:55:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:56:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:57:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:58:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:37 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 22:59:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:00:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:01:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:02:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:03:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:04:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:38 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:05:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:06:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:07:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:08:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:09:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:10:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:11:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:39 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:12:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:13:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:14:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:15:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:16:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:40 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:17:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:18:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:19:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:20:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:21:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:22:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:41 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:23:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:24:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:25:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:26:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:27:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:28:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:42 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:29:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:30:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:31:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:32:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:33:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:34:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:43 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:35:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:36:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:37:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:38:49 - root - INFO - Successfully generated Binance Smart Chain address: 0xA8fBb0Dcc072B42E33fD67aDC20b1041F52e6A9C
2025-07-22 23:38:49 - root - INFO - Successfully generated Binance Smart Chain address: 0xA8fBb0Dcc072B42E33fD67aDC20b1041F52e6A9C
2025-07-22 23:39:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:39:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:39:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:39:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:39:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:39:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:40:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:41:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:44 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:42:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:45 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
2025-07-22 23:43:46 - schedule - DEBUG - Running job Job(interval=1, unit=minutes, do=run_price_update, args=(), kwargs={})
